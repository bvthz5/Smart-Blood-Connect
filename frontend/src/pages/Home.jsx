// src/pages/Home.jsx
import React, { useState, useEffect, useRef } from 'react'
import { Link } from 'react-router-dom'
// DISABLE GSAP completely to eliminate performance violations
// import { gsap } from 'gsap'
// import { ScrollTrigger } from 'gsap/ScrollTrigger'
import Nav from '../components/Nav'
import HeroBanner from '../components/HeroBanner'
import SectionReveal from '../components/SectionReveal'
import AlertsBar from '../components/AlertsBar'
import { scheduleTask, scheduleLowPriorityTask } from '../utils/taskScheduler'
import '../styles/home-new.css'
import '../styles/home-enhancements.css'
import '../styles/home-redesign.css'


// DISABLE GSAP completely to eliminate performance violations
// gsap.registerPlugin(ScrollTrigger)

// EmergencyBar is now handled by AlertsBar component

// Hero section is now handled by HeroBanner component

// Component for Statistics
function StatsSection({ language }) {
  const [counts, setCounts] = useState({ donors: 0, units: 0, hospitals: 0, districts: 0 })
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const intervalRef = useRef(null)

  // Fetch stats from backend
  useEffect(() => {
    const fetchStats = async () => {
      try {
        setLoading(true)
        setError(null)
        
        const response = await import('../services/homepageService')
        const stats = await response.getCachedHomepageStats()
        
        if (stats) {
          setCounts({
            donors: stats.donors_registered || 0,
            units: stats.units_collected || 0,
            hospitals: stats.active_hospitals || 0,
            districts: stats.districts_covered || 0
          })
        }
      } catch (err) {
        console.error('Error fetching stats:', err)
        setError(err)
        // Set to 0 instead of dummy values
        setCounts({
          donors: 0,
          units: 0,
          hospitals: 0,
          districts: 0
        })
      } finally {
        setLoading(false)
      }
    }

    fetchStats()
    
    // Refresh stats every 10 minutes - optimized to prevent performance issues
    const refreshInterval = setInterval(() => {
      // Use requestIdleCallback to prevent blocking the main thread
      if (window.requestIdleCallback) {
        requestIdleCallback(fetchStats, { timeout: 1000 });
      } else {
        setTimeout(fetchStats, 0);
      }
    }, 10 * 60 * 1000)
    
    return () => clearInterval(refreshInterval)
  }, [])

  const stats = language === 'en' ? [
    { label: 'Donors Registered', value: loading ? '...' : counts.donors.toLocaleString(), icon: 'üë•' },
    { label: 'Units Collected', value: loading ? '...' : counts.units.toLocaleString(), icon: 'ü©∏' },
    { label: 'Active Hospitals', value: loading ? '...' : counts.hospitals.toLocaleString(), icon: 'üè•' },
    { label: 'Districts Covered', value: loading ? '...' : counts.districts.toLocaleString(), icon: 'üìç' },
    { label: 'Avg Response Time', value: '< 2 hrs', icon: '‚ö°' },
    { label: 'Success Rate', value: '94%', icon: '‚úÖ' }
  ] : [
    { label: '‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µº ‡¥ö‡µÜ‡¥Ø‡µç‡¥§ ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡µæ', value: loading ? '...' : counts.donors.toLocaleString(), icon: 'üë•' },
    { label: '‡¥∂‡µá‡¥ñ‡¥∞‡¥ø‡¥ö‡µç‡¥ö ‡¥Ø‡µÇ‡¥£‡¥ø‡¥±‡µç‡¥±‡µÅ‡¥ï‡µæ', value: loading ? '...' : counts.units.toLocaleString(), icon: 'ü©∏' },
    { label: '‡¥∏‡¥ú‡µÄ‡¥µ ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µæ', value: loading ? '...' : counts.hospitals.toLocaleString(), icon: 'üè•' },
    { label: '‡¥â‡µæ‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥§‡µç‡¥§‡¥ø‡¥Ø ‡¥ú‡¥ø‡¥≤‡µç‡¥≤‡¥ï‡µæ', value: loading ? '...' : counts.districts.toLocaleString(), icon: 'üìç' },
    { label: '‡¥∂‡¥∞‡¥æ‡¥∂‡¥∞‡¥ø ‡¥™‡µç‡¥∞‡¥§‡¥ø‡¥ï‡¥∞‡¥£ ‡¥∏‡¥Æ‡¥Ø‡¥Ç', value: '< 2 ‡¥Æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÇ‡µº', icon: '‚ö°' },
    { label: '‡¥µ‡¥ø‡¥ú‡¥Ø ‡¥®‡¥ø‡¥∞‡¥ï‡µç‡¥ï‡µç', value: '94%', icon: '‚úÖ' }
  ]

  return (
    <section className="stats-section">
      <div className="container">
        <div className="stats-grid">
          {stats.map((stat, index) => (
            <div key={index} className="stat-card">
              <div className="stat-icon">{stat.icon}</div>
              <div className="stat-number">{stat.value}</div>
              <div className="stat-label">{stat.label}</div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )
}

// Component for Why Donate Section
function WhyDonateSection({ language }) {
  const sectionRef = useRef(null)
  const cardsRef = useRef([])
  
  const reasons = language === 'en' ? [
    { title: 'Takes Only 1 Hour', description: 'Quick and safe at certified centers.', icon: '‚è±Ô∏è', motivation: 'One hour of your time can save three lives' },
    { title: 'Free Health Check-up', description: 'Complete medical screening before donation.', icon: 'üè•', motivation: 'Know your health status for free' },
    { title: 'Save Up to 3 Lives', description: 'One donation helps multiple patients.', icon: '‚ù§Ô∏è', motivation: 'Be someone\'s hero today' },
    { title: 'Help Kerala Community', description: 'Support your neighbors in need.', icon: 'ü§ù', motivation: 'Together we are stronger' },
    { title: 'Trusted by Hospitals', description: 'Partnered with 245+ medical centers.', icon: 'üèÜ', motivation: 'Certified and reliable network' },
    { title: 'Make a Difference', description: 'Your donation creates a ripple of hope.', icon: 'üåü', motivation: 'Small act, huge impact' }
  ] : [
    { title: '1 ‡¥Æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÇ‡µº ‡¥Æ‡¥æ‡¥§‡µç‡¥∞‡¥Ç', description: '‡¥∏‡µº‡¥ü‡µç‡¥ü‡¥ø‡¥´‡µà‡¥°‡µç ‡¥∏‡µÜ‡¥®‡µç‡¥±‡¥±‡µÅ‡¥ï‡¥≥‡¥ø‡µΩ ‡¥µ‡µá‡¥ó‡¥µ‡µÅ‡¥Ç ‡¥∏‡µÅ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥§‡¥µ‡µÅ‡¥Æ‡¥æ‡¥£‡µç.', icon: '‚è±Ô∏è', motivation: '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥í‡¥∞‡µÅ ‡¥Æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÇ‡µº ‡¥Æ‡µÇ‡¥®‡µç‡¥®‡µç ‡¥ú‡µÄ‡¥µ‡¥ø‡¥§‡¥ô‡µç‡¥ô‡µæ ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥Ç' },
    { title: '‡¥∏‡µó‡¥ú‡¥®‡µç‡¥Ø ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø ‡¥™‡¥∞‡¥ø‡¥∂‡µã‡¥ß‡¥®', description: '‡¥¶‡¥æ‡¥®‡¥§‡µç‡¥§‡¥ø‡¥®‡µç ‡¥Æ‡µÅ‡¥Æ‡µç‡¥™‡µç ‡¥™‡µÇ‡µº‡¥£‡µç‡¥£ ‡¥Æ‡µÜ‡¥°‡¥ø‡¥ï‡µç‡¥ï‡µΩ ‡¥∏‡µç‡¥ï‡µç‡¥∞‡µÄ‡¥®‡¥ø‡¥Ç‡¥ó‡µç.', icon: 'üè•', motivation: '‡¥∏‡µó‡¥ú‡¥®‡µç‡¥Ø‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø ‡¥®‡¥ø‡¥≤ ‡¥Ö‡¥±‡¥ø‡¥Ø‡µÅ‡¥ï' },
    { title: '3 ‡¥ú‡µÄ‡¥µ‡¥ø‡¥§‡¥ô‡µç‡¥ô‡µæ ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï', description: '‡¥í‡¥∞‡µÅ ‡¥¶‡¥æ‡¥®‡¥Ç ‡¥í‡¥®‡µç‡¥®‡¥ø‡¥≤‡¥ß‡¥ø‡¥ï‡¥Ç ‡¥∞‡µã‡¥ó‡¥ø‡¥ï‡¥≥‡µÜ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ.', icon: '‚ù§Ô∏è', motivation: '‡¥á‡¥®‡µç‡¥®‡µç ‡¥Ü‡¥∞‡µÅ‡¥ü‡µÜ‡¥Ø‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥π‡µÄ‡¥±‡µã ‡¥Ü‡¥ï‡µÇ' },
    { title: '‡¥ï‡µá‡¥∞‡¥≥ ‡¥∏‡¥Æ‡µÇ‡¥π‡¥§‡µç‡¥§‡µÜ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï', description: '‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥Æ‡µÅ‡¥≥‡µç‡¥≥ ‡¥Ö‡¥Ø‡µΩ‡¥ï‡µç‡¥ï‡¥æ‡¥∞‡µÜ ‡¥™‡¥ø‡¥®‡µç‡¥§‡µÅ‡¥£‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï.', icon: 'ü§ù', motivation: '‡¥í‡¥∞‡µÅ‡¥Æ‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥®‡¥Æ‡µç‡¥Æ‡µæ ‡¥∂‡¥ï‡µç‡¥§‡¥∞‡¥æ‡¥£‡µç' },
    { title: '‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µæ ‡¥Ü‡¥∂‡µç‡¥∞‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ', description: '245+ ‡¥Æ‡µÜ‡¥°‡¥ø‡¥ï‡µç‡¥ï‡µΩ ‡¥∏‡µÜ‡¥®‡µç‡¥±‡¥±‡µÅ‡¥ï‡¥≥‡µÅ‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥™‡¥ô‡µç‡¥ï‡¥æ‡¥≥‡¥ø‡¥§‡µç‡¥§‡¥Ç.', icon: 'üèÜ', motivation: '‡¥∏‡µº‡¥ü‡µç‡¥ü‡¥ø‡¥´‡µà‡¥°‡µÅ‡¥Ç ‡¥µ‡¥ø‡¥∂‡µç‡¥µ‡¥∏‡¥®‡µÄ‡¥Ø‡¥µ‡µÅ‡¥Æ‡¥æ‡¥Ø ‡¥®‡µÜ‡¥±‡µç‡¥±‡µç‚Äå‡¥µ‡µº‡¥ï‡µç‡¥ï‡µç' },
    { title: '‡¥µ‡µç‡¥Ø‡¥§‡µç‡¥Ø‡¥æ‡¥∏‡¥Ç ‡¥µ‡¥∞‡µÅ‡¥§‡µç‡¥§‡µÅ‡¥ï', description: '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥¶‡¥æ‡¥®‡¥Ç ‡¥™‡µç‡¥∞‡¥§‡µÄ‡¥ï‡µç‡¥∑‡¥Ø‡µÅ‡¥ü‡µÜ ‡¥§‡¥ø‡¥∞‡¥Æ‡¥æ‡¥≤ ‡¥∏‡µÉ‡¥∑‡µç‡¥ü‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ.', icon: 'üåü', motivation: '‡¥ö‡µÜ‡¥±‡¥ø‡¥Ø ‡¥™‡µç‡¥∞‡¥µ‡µÉ‡¥§‡µç‡¥§‡¥ø, ‡¥µ‡¥≤‡¥ø‡¥Ø ‡¥∏‡µç‡¥µ‡¥æ‡¥ß‡µÄ‡¥®‡¥Ç' }
  ]

  useEffect(() => {
    // DISABLE GSAP animations to eliminate performance violations
    // if (!sectionRef.current || !cardsRef.current.length) return

    // // Set initial state
    // gsap.set(cardsRef.current, { 
    //   opacity: 0, 
    //   y: 60,
    //   scale: 0.9
    // })

    // // Create scroll trigger animation
    // ScrollTrigger.create({
    //   trigger: sectionRef.current,
    //   start: "top 80%",
    //   onEnter: () => {
    //     gsap.to(cardsRef.current, {
    //       opacity: 1,
    //       y: 0,
    //       scale: 1,
    //       duration: 0.8,
    //       stagger: 0.15,
    //       ease: "power3.out"
    //     })
    //   }
    // })

    // return () => {
    //   ScrollTrigger.getAll().forEach(trigger => trigger.kill())
    // }
  }, [])

  return (
    <section ref={sectionRef} className="why-donate-section">
      <div className="container">
        <h2 className="section-title">
          {language === 'en' ? 'Why Donate?' : '‡¥é‡¥®‡µç‡¥§‡µÅ‡¥ï‡µä‡¥£‡µç‡¥ü‡µç ‡¥¶‡¥æ‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥£‡¥Ç?'}
        </h2>
        <div className="reasons-grid">
          {reasons.map((reason, index) => (
            <div 
              key={index} 
              ref={el => cardsRef.current[index] = el}
              className="reason-card"
            >
              <div className="reason-icon">{reason.icon}</div>
              <h3 className="reason-title">{reason.title}</h3>
              <p className="reason-description">{reason.description}</p>
              <p className="reason-motivation">{reason.motivation}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  )
}

// Component for Blood Compatibility Tool
function CompatibilityTool({ language }) {
  const [selectedBloodGroup, setSelectedBloodGroup] = useState('O+')
  const sectionRef = useRef(null)
  const buttonsRef = useRef([])
  const cardsRef = useRef([])
  const itemsRef = useRef([])
  
  const compatibility = {
    'O+': { donors: ['O+', 'O-'], receivers: ['O+', 'A+', 'B+', 'AB+'] },
    'O-': { donors: ['O-'], receivers: ['Everyone'] },
    'A+': { donors: ['A+', 'A-', 'O+', 'O-'], receivers: ['A+', 'AB+'] },
    'A-': { donors: ['A-', 'O-'], receivers: ['A+', 'A-', 'AB+', 'AB-'] },
    'B+': { donors: ['B+', 'B-', 'O+', 'O-'], receivers: ['B+', 'AB+'] },
    'B-': { donors: ['B-', 'O-'], receivers: ['B+', 'B-', 'AB+', 'AB-'] },
    'AB+': { donors: ['Everyone'], receivers: ['AB+'] },
    'AB-': { donors: ['AB-', 'A-', 'B-', 'O-'], receivers: ['AB+', 'AB-'] }
  }

  const bloodGroups = Object.keys(compatibility)

  useEffect(() => {
    // DISABLE GSAP animations to eliminate performance violations
    // if (!sectionRef.current) return

    // // Set initial state
    // gsap.set(buttonsRef.current, { opacity: 0, y: 30 })
    // gsap.set(cardsRef.current, { opacity: 0, y: 40 })

    // // Create scroll trigger animation
    // ScrollTrigger.create({
    //   trigger: sectionRef.current,
    //   start: "top 80%",
    //   onEnter: () => {
    //     gsap.to(buttonsRef.current, {
    //       opacity: 1,
    //       y: 0,
    //       duration: 0.6,
    //       stagger: 0.1,
    //       ease: "power3.out"
    //     })
        
    //     gsap.to(cardsRef.current, {
    //       opacity: 1,
    //       y: 0,
    //       duration: 0.8,
    //       stagger: 0.2,
    //       ease: "power3.out",
    //       delay: 0.3
    //     })
    //   }
    // })

    // return () => {
    //   ScrollTrigger.getAll().forEach(trigger => trigger.kill())
    // }
  }, [])

  useEffect(() => {
    // DISABLE GSAP animations to eliminate performance violations
    // // Animate compatibility items when blood group changes
    // if (itemsRef.current.length > 0) {
    //   gsap.fromTo(itemsRef.current, 
    //     { opacity: 0, scale: 0.8 },
    //     { 
    //       opacity: 1, 
    //       scale: 1, 
    //       duration: 0.5, 
    //       stagger: 0.1,
    //       ease: "back.out(1.7)"
    //     }
    //   )
    // }
  }, [selectedBloodGroup])

  return (
    <section ref={sectionRef} className="compatibility-section">
      <div className="container">
        <h2 className="section-title">
          {language === 'en' ? 'Blood Compatibility Tool' : '‡¥∞‡¥ï‡µç‡¥§ ‡¥∏‡¥æ‡¥Æ‡µç‡¥Ø‡¥§ ‡¥â‡¥™‡¥ï‡¥∞‡¥£‡¥Ç'}
        </h2>
        <div className="compatibility-container">
          <div className="blood-group-selector">
            <label>
              {language === 'en' ? 'Select Blood Group:' : '‡¥∞‡¥ï‡µç‡¥§‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï:'}
            </label>
            <div className="blood-group-buttons">
              {bloodGroups.map((group, index) => (
                <button
                  key={group}
                  ref={el => buttonsRef.current[index] = el}
                  className={`blood-group-btn ${selectedBloodGroup === group ? 'active' : ''}`}
                  onClick={() => setSelectedBloodGroup(group)}
                >
                  {group}
                </button>
              ))}
            </div>
          </div>
          <div className="compatibility-results">
            <div ref={el => cardsRef.current[0] = el} className="compatibility-card">
              <h3>{language === 'en' ? 'Can Donate To:' : '‡¥¶‡¥æ‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡µª ‡¥ï‡¥¥‡¥ø‡¥Ø‡µÅ‡¥®‡µç‡¥®‡¥µ‡µº:'}</h3>
              <div className="compatibility-list">
                {compatibility[selectedBloodGroup].receivers.map((group, index) => (
                  <span 
                    key={group} 
                    ref={el => itemsRef.current[index] = el}
                    className="compatibility-item"
                  >
                    {group}
                  </span>
                ))}
              </div>
            </div>
            <div ref={el => cardsRef.current[1] = el} className="compatibility-card">
              <h3>{language === 'en' ? 'Can Receive From:' : '‡¥∏‡µç‡¥µ‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥ï‡¥¥‡¥ø‡¥Ø‡µÅ‡¥®‡µç‡¥®‡¥µ‡µº:'}</h3>
              <div className="compatibility-list">
                {compatibility[selectedBloodGroup].donors.map((group, index) => (
                  <span 
                    key={group} 
                    ref={el => itemsRef.current[index + compatibility[selectedBloodGroup].receivers.length] = el}
                    className="compatibility-item"
                  >
                    {group}
                  </span>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

// Component for How It Works - Simplified & Real
function HowItWorksSection({ language }) {
  const donorSteps = language === 'en' ? [
    { step: '1', title: 'Sign Up', description: 'Register with your blood group and contact details', icon: '‚úçÔ∏è', color: '#4CAF50' },
    { step: '2', title: 'Get Matched', description: 'Receive notifications when your blood type is needed nearby', icon: 'üîî', color: '#2196F3' },
    { step: '3', title: 'Donate Blood', description: 'Visit the hospital and complete your donation', icon: 'ü©∏', color: '#E63946' },
    { step: '4', title: 'Save Lives', description: 'Track your impact and donation history', icon: '‚ù§Ô∏è', color: '#FF9800' }
  ] : [
    { step: '1', title: '‡¥∏‡µà‡µª ‡¥Ö‡¥™‡µç‡¥™‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï', description: '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∞‡¥ï‡µç‡¥§‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µÅ‡¥Ç ‡¥¨‡¥®‡µç‡¥ß‡¥™‡µç‡¥™‡µÜ‡¥ü‡¥æ‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥µ‡¥ø‡¥∂‡¥¶‡¥æ‡¥Ç‡¥∂‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥Ç ‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µº ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï', icon: '‚úçÔ∏è', color: '#4CAF50' },
    { step: '2', title: '‡¥Æ‡¥æ‡¥ö‡µç‡¥ö‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥ï', description: '‡¥Ö‡¥ü‡µÅ‡¥§‡µç‡¥§‡µÅ‡¥≥‡µç‡¥≥ ‡¥∏‡µç‡¥•‡¥≤‡¥§‡µç‡¥§‡µç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∞‡¥ï‡µç‡¥§‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥Æ‡µÅ‡¥≥‡µç‡¥≥‡¥™‡µç‡¥™‡µã‡µæ ‡¥Ö‡¥±‡¥ø‡¥Ø‡¥ø‡¥™‡µç‡¥™‡µÅ‡¥ï‡µæ ‡¥∏‡µç‡¥µ‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï', icon: 'üîî', color: '#2196F3' },
    { step: '3', title: '‡¥∞‡¥ï‡µç‡¥§‡¥¶‡¥æ‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï', description: '‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø ‡¥∏‡¥®‡µç‡¥¶‡µº‡¥∂‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥¶‡¥æ‡¥®‡¥Ç ‡¥™‡µÇ‡µº‡¥§‡µç‡¥§‡¥ø‡¥Ø‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥ï', icon: 'ü©∏', color: '#E63946' },
    { step: '4', title: '‡¥ú‡µÄ‡¥µ‡µª ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï', description: '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∏‡µç‡¥µ‡¥æ‡¥ß‡µÄ‡¥®‡¥µ‡µÅ‡¥Ç ‡¥¶‡¥æ‡¥® ‡¥ö‡¥∞‡¥ø‡¥§‡µç‡¥∞‡¥µ‡µÅ‡¥Ç ‡¥ü‡µç‡¥∞‡¥æ‡¥ï‡µç‡¥ï‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï', icon: '‚ù§Ô∏è', color: '#FF9800' }
  ]

  const hospitalSteps = language === 'en' ? [
    { step: '1', title: 'Login', description: 'Access your hospital dashboard securely', icon: 'üîê', color: '#9C27B0' },
    { step: '2', title: 'Post Request', description: 'Enter blood type, quantity, and urgency level', icon: 'üìù', color: '#E91E63' },
    { step: '3', title: 'Auto-Match', description: 'System finds compatible donors in your area', icon: '‚ö°', color: '#FF5722' },
    { step: '4', title: 'Coordinate', description: 'Connect with donors and schedule donations', icon: 'üìû', color: '#00BCD4' }
  ] : [
    { step: '1', title: '‡¥≤‡µã‡¥ó‡¥ø‡µª', description: '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø ‡¥°‡¥æ‡¥∑‡µç‡¥¨‡µã‡µº‡¥°‡µç ‡¥∏‡µÅ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥§‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥Ü‡¥ï‡µç‡¥∏‡¥∏‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï', icon: 'üîê', color: '#9C27B0' },
    { step: '2', title: '‡¥Ö‡¥≠‡µç‡¥Ø‡µº‡¥§‡µç‡¥•‡¥® ‡¥™‡µã‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï', description: '‡¥∞‡¥ï‡µç‡¥§‡¥ó‡µç‡¥∞‡µÇ‡¥™‡µç‡¥™‡µç, ‡¥Ö‡¥≥‡¥µ‡µç, ‡¥Ö‡¥ü‡¥ø‡¥Ø‡¥®‡µç‡¥§‡¥ø‡¥∞ ‡¥®‡¥ø‡¥≤ ‡¥é‡¥®‡µç‡¥®‡¥ø‡¥µ ‡¥®‡µΩ‡¥ï‡µÅ‡¥ï', icon: 'üìù', color: '#E91E63' },
    { step: '3', title: '‡¥ì‡¥ü‡µç‡¥ü‡µã-‡¥Æ‡¥æ‡¥ö‡µç‡¥ö‡µç', description: '‡¥∏‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡¥Ç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥™‡µç‡¥∞‡¥¶‡µá‡¥∂‡¥§‡µç‡¥§‡µÜ ‡¥Ö‡¥®‡µÅ‡¥Ø‡µã‡¥ú‡µç‡¥Ø‡¥Æ‡¥æ‡¥Ø ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡¥≥‡µÜ ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡µÅ‡¥®‡µç‡¥®‡µÅ', icon: '‚ö°', color: '#FF5722' },
    { step: '4', title: '‡¥è‡¥ï‡µã‡¥™‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï', description: '‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡¥≥‡µÅ‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥¨‡¥®‡µç‡¥ß‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥¶‡¥æ‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥∑‡µÜ‡¥°‡µç‡¥Ø‡µÇ‡µæ ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï', icon: 'üìû', color: '#00BCD4' }
  ]

  return (
    <section className="how-it-works-section-new">
      <div className="container">
        <div className="section-header-centered">
          <h2 className="section-title-modern">
            {language === 'en' ? 'How It Works' : '‡¥á‡¥§‡µç ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ'}
          </h2>
          <p className="section-subtitle-modern">
            {language === 'en' 
              ? 'Simple steps to save lives' 
              : '‡¥ú‡µÄ‡¥µ‡µª ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥≤‡¥≥‡¥ø‡¥§‡¥Æ‡¥æ‡¥Ø ‡¥ò‡¥ü‡µç‡¥ü‡¥ô‡µç‡¥ô‡µæ'}
          </p>
        </div>
        
        <div className="workflows-modern">
          {/* Donors Section */}
          <div className="workflow-modern">
            <div className="workflow-header">
              <span className="workflow-badge workflow-badge--donor">
                {language === 'en' ? 'üë§ For Donors' : 'üë§ ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç'}
              </span>
            </div>
            <div className="steps-modern">
              {donorSteps.map((step, index) => (
                <div key={index} className="step-modern" style={{ '--step-color': step.color }}>
                  <div className="step-icon-modern">{step.icon}</div>
                  <div className="step-details">
                    <div className="step-number-modern">{step.step}</div>
                    <h4 className="step-title-modern">{step.title}</h4>
                    <p className="step-description-modern">{step.description}</p>
                  </div>
                  {index < donorSteps.length - 1 && <div className="step-connector"></div>}
                </div>
              ))}
            </div>
          </div>

          {/* Hospitals Section */}
          <div className="workflow-modern">
            <div className="workflow-header">
              <span className="workflow-badge workflow-badge--hospital">
                {language === 'en' ? 'üè• For Hospitals' : 'üè• ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µç'}
              </span>
            </div>
            <div className="steps-modern">
              {hospitalSteps.map((step, index) => (
                <div key={index} className="step-modern" style={{ '--step-color': step.color }}>
                  <div className="step-icon-modern">{step.icon}</div>
                  <div className="step-details">
                    <div className="step-number-modern">{step.step}</div>
                    <h4 className="step-title-modern">{step.title}</h4>
                    <p className="step-description-modern">{step.description}</p>
                  </div>
                  {index < hospitalSteps.length - 1 && <div className="step-connector"></div>}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

// Component for Alerts & Camps - Redesigned with Two Carousels
function AlertsCampsSection({ language }) {
  const [currentUrgent, setCurrentUrgent] = useState(0)
  const [currentCamp, setCurrentCamp] = useState(0)
  
  const urgentRequests = language === 'en' ? [
    { 
      title: 'O- Blood Urgently Needed', 
      hospital: 'Medical College Hospital',
      location: 'Trivandrum',
      bloodType: 'O-',
      units: '3 Units',
      time: 'Within 2 hours',
      contact: '+91-471-2528300'
    },
    { 
      title: 'AB+ Platelets Required', 
      hospital: 'Amrita Hospital',
      location: 'Kochi',
      bloodType: 'AB+',
      units: '2 Units',
      time: 'Immediate',
      contact: '+91-484-2851234'
    },
    { 
      title: 'B+ Blood for Surgery', 
      hospital: 'KIMS Hospital',
      location: 'Trivandrum',
      bloodType: 'B+',
      units: '4 Units',
      time: 'Today 4:00 PM',
      contact: '+91-471-3041400'
    }
  ] : [
    { 
      title: 'O- ‡¥∞‡¥ï‡µç‡¥§‡¥Ç ‡¥Ö‡¥ü‡¥ø‡¥Ø‡¥®‡µç‡¥§‡¥ø‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥Ç', 
      hospital: '‡¥Æ‡µÜ‡¥°‡¥ø‡¥ï‡µç‡¥ï‡µΩ ‡¥ï‡µã‡¥≥‡µá‡¥ú‡µç ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø',
      location: '‡¥§‡¥ø‡¥∞‡µÅ‡¥µ‡¥®‡¥®‡µç‡¥§‡¥™‡µÅ‡¥∞‡¥Ç',
      bloodType: 'O-',
      units: '3 ‡¥Ø‡µÇ‡¥£‡¥ø‡¥±‡µç‡¥±‡µÅ‡¥ï‡µæ',
      time: '2 ‡¥Æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÇ‡¥±‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥‡¥ø‡µΩ',
      contact: '+91-471-2528300'
    },
    { 
      title: 'AB+ ‡¥™‡µç‡¥≤‡µá‡¥±‡µç‡¥±‡µç‡¥≤‡µÜ‡¥±‡µç‡¥±‡µÅ‡¥ï‡µæ ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥Ç', 
      hospital: '‡¥Ö‡¥Æ‡µÉ‡¥§ ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø',
      location: '‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø',
      bloodType: 'AB+',
      units: '2 ‡¥Ø‡µÇ‡¥£‡¥ø‡¥±‡µç‡¥±‡µÅ‡¥ï‡µæ',
      time: '‡¥â‡¥ü‡¥®‡¥ü‡¥ø',
      contact: '+91-484-2851234'
    },
    { 
      title: '‡¥∂‡¥∏‡µç‡¥§‡µç‡¥∞‡¥ï‡µç‡¥∞‡¥ø‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µç B+ ‡¥∞‡¥ï‡µç‡¥§‡¥Ç', 
      hospital: 'KIMS ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø',
      location: '‡¥§‡¥ø‡¥∞‡µÅ‡¥µ‡¥®‡¥®‡µç‡¥§‡¥™‡µÅ‡¥∞‡¥Ç',
      bloodType: 'B+',
      units: '4 ‡¥Ø‡µÇ‡¥£‡¥ø‡¥±‡µç‡¥±‡µÅ‡¥ï‡µæ',
      time: '‡¥á‡¥®‡µç‡¥®‡µç 4:00 PM',
      contact: '+91-471-3041400'
    }
  ]

  const bloodCamps = language === 'en' ? [
    { 
      title: 'Mega Blood Donation Camp', 
      organizer: 'Rajagiri Hospital',
      location: 'Aluva, Ernakulam',
      date: 'Jan 25, 2025',
      time: '9:00 AM - 5:00 PM',
      expected: '200+ Donors',
      contact: '+91-484-2905000'
    },
    { 
      title: 'Community Blood Drive', 
      organizer: 'Rotary Club Kochi',
      location: 'Lakeshore Hospital, Kochi',
      date: 'Jan 28, 2025',
      time: '10:00 AM - 4:00 PM',
      expected: '150+ Donors',
      contact: '+91-484-2701032'
    },
    { 
      title: 'Youth Blood Donation Camp', 
      organizer: 'NSS Kerala',
      location: 'University Campus, Trivandrum',
      date: 'Feb 2, 2025',
      time: '8:00 AM - 2:00 PM',
      expected: '300+ Donors',
      contact: '+91-471-2305501'
    }
  ] : [
    { 
      title: '‡¥Æ‡µÜ‡¥ó‡¥æ ‡¥∞‡¥ï‡µç‡¥§‡¥¶‡¥æ‡¥® ‡¥ï‡µç‡¥Ø‡¥æ‡¥Æ‡µç‡¥™‡µç', 
      organizer: '‡¥∞‡¥æ‡¥ú‡¥ó‡¥ø‡¥∞‡¥ø ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø',
      location: '‡¥Ü‡¥≤‡µÅ‡¥µ, ‡¥é‡¥±‡¥£‡¥æ‡¥ï‡µÅ‡¥≥‡¥Ç',
      date: '‡¥ú‡¥®‡µÅ‡¥µ‡¥∞‡¥ø 25, 2025',
      time: '9:00 AM - 5:00 PM',
      expected: '200+ ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡µæ',
      contact: '+91-484-2905000'
    },
    { 
      title: '‡¥ï‡¥Æ‡µç‡¥Æ‡µç‡¥Ø‡µÇ‡¥£‡¥ø‡¥±‡µç‡¥±‡¥ø ‡¥¨‡µç‡¥≤‡¥°‡µç ‡¥°‡µç‡¥∞‡µà‡¥µ‡µç', 
      organizer: '‡¥±‡µã‡¥ü‡µç‡¥ü‡¥±‡¥ø ‡¥ï‡µç‡¥≤‡¥¨‡µç ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø',
      location: '‡¥≤‡µá‡¥ï‡µç‡¥∑‡µã‡µº ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø, ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø',
      date: '‡¥ú‡¥®‡µÅ‡¥µ‡¥∞‡¥ø 28, 2025',
      time: '10:00 AM - 4:00 PM',
      expected: '150+ ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡µæ',
      contact: '+91-484-2701032'
    },
    { 
      title: '‡¥Ø‡µÇ‡¥§‡µç‡¥§‡µç ‡¥¨‡µç‡¥≤‡¥°‡µç ‡¥°‡µä‡¥£‡µá‡¥∑‡µª ‡¥ï‡µç‡¥Ø‡¥æ‡¥Æ‡µç‡¥™‡µç', 
      organizer: 'NSS ‡¥ï‡µá‡¥∞‡¥≥',
      location: '‡¥Ø‡µÇ‡¥£‡¥ø‡¥µ‡µá‡¥¥‡µç‡¥∏‡¥ø‡¥±‡µç‡¥±‡¥ø ‡¥ï‡¥æ‡¥Æ‡µç‡¥™‡¥∏‡µç, ‡¥§‡¥ø‡¥∞‡µÅ‡¥µ‡¥®‡¥®‡µç‡¥§‡¥™‡µÅ‡¥∞‡¥Ç',
      date: '‡¥´‡µÜ‡¥¨‡µç‡¥∞‡µÅ‡¥µ‡¥∞‡¥ø 2, 2025',
      time: '8:00 AM - 2:00 PM',
      expected: '300+ ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡µæ',
      contact: '+91-471-2305501'
    }
  ]

  useEffect(() => {
    const urgentInterval = setInterval(() => {
      setCurrentUrgent((prev) => (prev + 1) % urgentRequests.length)
    }, 5000)
    return () => clearInterval(urgentInterval)
  }, [urgentRequests.length])

  useEffect(() => {
    const campInterval = setInterval(() => {
      setCurrentCamp((prev) => (prev + 1) % bloodCamps.length)
    }, 7000)
    return () => clearInterval(campInterval)
  }, [bloodCamps.length])

  return (
    <section className="alerts-camps-section-new">
      <div className="container">
        <div className="section-header-centered">
          <h2 className="section-title-modern">
            {language === 'en' ? 'Blood Requests & Donation Camps' : '‡¥∞‡¥ï‡µç‡¥§ ‡¥Ö‡¥≠‡µç‡¥Ø‡µº‡¥§‡µç‡¥•‡¥®‡¥ï‡¥≥‡µÅ‡¥Ç ‡¥¶‡¥æ‡¥® ‡¥ï‡µç‡¥Ø‡¥æ‡¥Æ‡µç‡¥™‡µÅ‡¥ï‡¥≥‡µÅ‡¥Ç'}
          </h2>
        </div>

        {/* Two-Column Layout */}
        <div className="alerts-camps-grid">
          {/* Urgent Requests Carousel */}
          <div className="carousel-section urgent-section">
            <div className="carousel-header">
              <h3 className="carousel-title">
                <span className="title-icon">üö®</span>
                {language === 'en' ? 'Urgent Blood Requests' : '‡¥Ö‡¥ü‡¥ø‡¥Ø‡¥®‡µç‡¥§‡¥∞ ‡¥∞‡¥ï‡µç‡¥§ ‡¥Ö‡¥≠‡µç‡¥Ø‡µº‡¥§‡µç‡¥•‡¥®‡¥ï‡µæ'}
              </h3>
              <span className="live-badge">LIVE</span>
            </div>
            
            <div className="carousel-container">
              <div className="urgent-card">
                <div className="blood-type-badge">{urgentRequests[currentUrgent].bloodType}</div>
                <h4 className="urgent-title">{urgentRequests[currentUrgent].title}</h4>
                <div className="urgent-details">
                  <div className="detail-row">
                    <span className="detail-icon">üè•</span>
                    <span>{urgentRequests[currentUrgent].hospital}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">üìç</span>
                    <span>{urgentRequests[currentUrgent].location}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">ü©∏</span>
                    <span>{urgentRequests[currentUrgent].units}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">‚è∞</span>
                    <span>{urgentRequests[currentUrgent].time}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">üìû</span>
                    <a href={`tel:${urgentRequests[currentUrgent].contact}`}>{urgentRequests[currentUrgent].contact}</a>
                  </div>
                </div>
                <button className="respond-btn">
                  {language === 'en' ? 'ü©∏ I Can Donate' : 'ü©∏ ‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥¶‡¥æ‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥Ç'}
                </button>
              </div>
              
              <div className="carousel-dots">
                {urgentRequests.map((_, index) => (
                  <button
                    key={index}
                    className={`dot ${index === currentUrgent ? 'active' : ''}`}
                    onClick={() => setCurrentUrgent(index)}
                    aria-label={`Request ${index + 1}`}
                  />
                ))}
              </div>
            </div>
          </div>

          {/* Blood Camps Carousel */}
          <div className="carousel-section camps-section">
            <div className="carousel-header">
              <h3 className="carousel-title">
                <span className="title-icon">üèïÔ∏è</span>
                {language === 'en' ? 'Upcoming Blood Camps' : '‡¥µ‡¥∞‡¥æ‡¥®‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥¨‡µç‡¥≤‡¥°‡µç ‡¥ï‡µç‡¥Ø‡¥æ‡¥Æ‡µç‡¥™‡µÅ‡¥ï‡µæ'}
              </h3>
              <span className="upcoming-badge">UPCOMING</span>
            </div>
            
            <div className="carousel-container">
              <div className="camp-card">
                <div className="camp-icon">üé™</div>
                <h4 className="camp-title">{bloodCamps[currentCamp].title}</h4>
                <div className="camp-details">
                  <div className="detail-row">
                    <span className="detail-icon">üë•</span>
                    <span>{bloodCamps[currentCamp].organizer}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">üìç</span>
                    <span>{bloodCamps[currentCamp].location}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">üìÖ</span>
                    <span>{bloodCamps[currentCamp].date}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">üïê</span>
                    <span>{bloodCamps[currentCamp].time}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">üéØ</span>
                    <span>{bloodCamps[currentCamp].expected}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-icon">üìû</span>
                    <a href={`tel:${bloodCamps[currentCamp].contact}`}>{bloodCamps[currentCamp].contact}</a>
                  </div>
                </div>
                <button className="register-btn">
                  {language === 'en' ? 'üìù Register Now' : 'üìù ‡¥á‡¥™‡µç‡¥™‡µã‡µæ ‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µº ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï'}
                </button>
              </div>
              
              <div className="carousel-dots">
                {bloodCamps.map((_, index) => (
                  <button
                    key={index}
                    className={`dot ${index === currentCamp ? 'active' : ''}`}
                    onClick={() => setCurrentCamp(index)}
                    aria-label={`Camp ${index + 1}`}
                  />
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

// Component for Testimonials
function TestimonialsSection({ language }) {
  const [currentTestimonial, setCurrentTestimonial] = useState(0)
  const [testimonials, setTestimonials] = useState([])
  const [loading, setLoading] = useState(true)
  
  // Default fallback testimonials
  const defaultTestimonials = language === 'en' ? [
    {
      quote: "SmartBlood helped me donate blood at Rajagiri Hospital and save lives.",
      author: "Ramesh Das",
      role: "Blood Donor",
      location: "Ernakulam",
      donations: "12 donations",
      image: "üë®‚Äç‚öïÔ∏è",
      rating: 5
    },
    {
      quote: "Within 2 hours of posting a request, we found 5 compatible donors. This platform is a lifesaver!",
      author: "Dr. Anjali Menon",
      role: "Blood Bank Officer",
      location: "Medical College, Trivandrum",
      impact: "Helped 200+ patients",
      image: "üë©‚Äç‚öïÔ∏è",
      rating: 5
    },
    {
      quote: "My mother needed AB- blood urgently. SmartBlood's AI matched us with a donor in our locality within minutes. Forever grateful!",
      author: "Arjun Krishnan",
      role: "Patient's Son",
      location: "Kochi",
      impact: "Life saved",
      image: "üôè",
      rating: 5
    },
    {
      quote: "As a regular donor for 5 years, SmartBlood makes it incredibly easy to contribute. The notifications are timely and the process is seamless.",
      author: "Sreelakshmi Nair",
      role: "Regular Donor",
      location: "Kozhikode",
      donations: "28 donations",
      image: "üë©",
      rating: 5
    },
    {
      quote: "The ML-powered matching saved precious time during an emergency. This is the future of blood donation management.",
      author: "Dr. Thomas Jacob",
      role: "Emergency Medicine",
      location: "Amrita Hospital, Kochi",
      impact: "Critical care specialist",
      image: "üë®‚Äç‚öïÔ∏è",
      rating: 5
    }
  ] : [
    {
      quote: "‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥¨‡µç‡¥≤‡¥°‡µç ‡¥∞‡¥æ‡¥ú‡¥ó‡¥ø‡¥∞‡¥ø ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø‡¥Ø‡¥ø‡µΩ ‡¥∞‡¥ï‡µç‡¥§‡¥¶‡¥æ‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥®‡µÅ‡¥Ç ‡¥ú‡µÄ‡¥µ‡µª ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥®‡µÅ‡¥Ç ‡¥é‡¥®‡µç‡¥®‡µÜ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ö‡µç‡¥ö‡µÅ.",
      author: "‡¥∞‡¥Æ‡µá‡¥∑‡µç ‡¥¶‡¥æ‡¥∏‡µç",
      role: "‡¥∞‡¥ï‡µç‡¥§ ‡¥¶‡¥æ‡¥®‡¥ø",
      location: "‡¥é‡¥±‡¥£‡¥æ‡¥ï‡µÅ‡¥≥‡¥Ç",
      donations: "12 ‡¥¶‡¥æ‡¥®‡¥ô‡µç‡¥ô‡µæ",
      image: "üë®‚Äç‚öïÔ∏è",
      rating: 5
    },
    {
      quote: "‡¥Ö‡¥≠‡µç‡¥Ø‡µº‡¥§‡µç‡¥•‡¥® ‡¥™‡µã‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µç 2 ‡¥Æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÇ‡¥±‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥‡¥ø‡µΩ 5 ‡¥Ö‡¥®‡µÅ‡¥Ø‡µã‡¥ú‡µç‡¥Ø‡¥Æ‡¥æ‡¥Ø ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡¥≥‡µÜ ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡¥ø. ‡¥à ‡¥™‡µç‡¥≤‡¥æ‡¥±‡µç‡¥±‡µç‡¥´‡µã‡¥Ç ‡¥ú‡µÄ‡¥µ‡µª ‡¥∞‡¥ï‡µç‡¥∑‡¥ï‡¥Æ‡¥æ‡¥£‡µç!",
      author: "‡¥°‡µã. ‡¥Ö‡¥û‡µç‡¥ú‡¥≤‡¥ø ‡¥Æ‡µá‡¥®‡µã‡µª",
      role: "‡¥¨‡µç‡¥≤‡¥°‡µç ‡¥¨‡¥æ‡¥ô‡µç‡¥ï‡µç ‡¥ì‡¥´‡µÄ‡¥∏‡µº",
      location: "‡¥Æ‡µÜ‡¥°‡¥ø‡¥ï‡µç‡¥ï‡µΩ ‡¥ï‡µã‡¥≥‡µá‡¥ú‡µç, ‡¥§‡¥ø‡¥∞‡µÅ‡¥µ‡¥®‡¥®‡µç‡¥§‡¥™‡µÅ‡¥∞‡¥Ç",
      impact: "200+ ‡¥∞‡µã‡¥ó‡¥ø‡¥ï‡¥≥‡µÜ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ö‡µç‡¥ö‡µÅ",
      image: "üë©‚Äç‚öïÔ∏è",
      rating: 5
    },
    {
      quote: "‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥Ö‡¥Æ‡µç‡¥Æ‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µç AB- ‡¥∞‡¥ï‡µç‡¥§‡¥Ç ‡¥Ö‡¥ü‡¥ø‡¥Ø‡¥®‡µç‡¥§‡¥ø‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥Æ‡¥æ‡¥Ø‡¥ø‡¥∞‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥¨‡µç‡¥≤‡¥°‡¥ø‡¥®‡µç‡¥±‡µÜ AI ‡¥Æ‡¥ø‡¥®‡¥ø‡¥±‡µç‡¥±‡µÅ‡¥ï‡µæ‡¥ï‡µç‡¥ï‡µÅ‡¥≥‡µç‡¥≥‡¥ø‡µΩ ‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥™‡µç‡¥∞‡¥¶‡µá‡¥∂‡¥§‡µç‡¥§‡µÜ ‡¥¶‡¥æ‡¥®‡¥ø‡¥Ø‡µÅ‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥¨‡¥®‡µç‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ö‡µç‡¥ö‡µÅ. ‡¥é‡¥®‡µç‡¥®‡µá‡¥ï‡µç‡¥ï‡µÅ‡¥Ç ‡¥®‡¥®‡µç‡¥¶‡¥ø‡¥Ø‡µÅ‡¥≥‡µç‡¥≥‡¥µ‡¥®‡¥æ‡¥£‡µç!",
      author: "‡¥Ö‡µº‡¥ú‡µÅ‡µª ‡¥ï‡µÉ‡¥∑‡µç‡¥£‡µª",
      role: "‡¥∞‡µã‡¥ó‡¥ø‡¥Ø‡µÅ‡¥ü‡µÜ ‡¥Æ‡¥ï‡µª",
      location: "‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø",
      impact: "‡¥ú‡µÄ‡¥µ‡µª ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥ö‡µç‡¥ö‡µÅ",
      image: "üôè",
      rating: 5
    },
    {
      quote: "5 ‡¥µ‡µº‡¥∑‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥∏‡µç‡¥•‡¥ø‡¥∞‡¥Ç ‡¥¶‡¥æ‡¥®‡¥ø‡¥Ø‡¥æ‡¥Ø‡¥ø, ‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥¨‡µç‡¥≤‡¥°‡µç ‡¥∏‡¥Ç‡¥≠‡¥æ‡¥µ‡¥® ‡¥®‡µΩ‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡µç ‡¥Ö‡¥µ‡¥ø‡¥∂‡µç‡¥µ‡¥∏‡¥®‡µÄ‡¥Ø‡¥Æ‡¥æ‡¥Ç‡¥µ‡¥£‡µç‡¥£‡¥Ç ‡¥é‡¥≥‡µÅ‡¥™‡µç‡¥™‡¥Æ‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥Ö‡¥±‡¥ø‡¥Ø‡¥ø‡¥™‡µç‡¥™‡µÅ‡¥ï‡µæ ‡¥∏‡¥Æ‡¥Ø‡¥¨‡¥®‡µç‡¥ß‡¥ø‡¥§‡¥µ‡µÅ‡¥Ç ‡¥™‡µç‡¥∞‡¥ï‡µç‡¥∞‡¥ø‡¥Ø ‡¥§‡¥ü‡¥∏‡µç‡¥∏‡¥Æ‡¥ø‡¥≤‡µç‡¥≤‡¥æ‡¥§‡µç‡¥§‡¥§‡µÅ‡¥Æ‡¥æ‡¥£‡µç.",
      author: "‡¥∂‡µç‡¥∞‡µÄ‡¥≤‡¥ï‡µç‡¥∑‡µç‡¥Æ‡¥ø ‡¥®‡¥æ‡¥Ø‡µº",
      role: "‡¥∏‡µç‡¥•‡¥ø‡¥∞‡¥Ç ‡¥¶‡¥æ‡¥®‡¥ø",
      location: "‡¥ï‡µã‡¥¥‡¥ø‡¥ï‡µç‡¥ï‡µã‡¥ü‡µç",
      donations: "28 ‡¥¶‡¥æ‡¥®‡¥ô‡µç‡¥ô‡µæ",
      image: "üë©",
      rating: 5
    },
    {
      quote: "ML-‡¥™‡¥µ‡µº‡¥°‡µç ‡¥Æ‡¥æ‡¥ö‡µç‡¥ö‡¥ø‡¥Ç‡¥ó‡µç ‡¥Ö‡¥ü‡¥ø‡¥Ø‡¥®‡µç‡¥§‡¥ø‡¥∞ ‡¥∏‡¥Æ‡¥Ø‡¥§‡µç‡¥§‡µç ‡¥µ‡¥ø‡¥≤‡¥Ø‡µá‡¥±‡¥ø‡¥Ø ‡¥∏‡¥Æ‡¥Ø‡¥Ç ‡¥≤‡¥æ‡¥≠‡¥ø‡¥ö‡µç‡¥ö‡µÅ. ‡¥á‡¥§‡µç ‡¥∞‡¥ï‡µç‡¥§‡¥¶‡¥æ‡¥® ‡¥Æ‡¥æ‡¥®‡µá‡¥ú‡µç‡¥Æ‡µÜ‡¥®‡µç‡¥±‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥≠‡¥æ‡¥µ‡¥ø‡¥Ø‡¥æ‡¥£‡µç.",
      author: "‡¥°‡µã. ‡¥§‡µã‡¥Æ‡¥∏‡µç ‡¥ú‡µá‡¥ï‡µç‡¥ï‡¥¨‡µç",
      role: "‡¥é‡¥Æ‡µº‡¥ú‡µª‡¥∏‡¥ø ‡¥Æ‡µÜ‡¥°‡¥ø‡¥∏‡¥ø‡µª",
      location: "‡¥Ö‡¥Æ‡µÉ‡¥§ ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø, ‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø",
      impact: "‡¥ï‡µç‡¥∞‡¥ø‡¥ü‡µç‡¥ü‡¥ø‡¥ï‡µç‡¥ï‡µΩ ‡¥ï‡µÜ‡¥Ø‡µº ‡¥∏‡µç‡¥™‡µÜ‡¥∑‡µç‡¥Ø‡¥≤‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µç",
      image: "üë®‚Äç‚öïÔ∏è",
      rating: 5
    }
  ]

  // Fetch testimonials from backend
  useEffect(() => {
    const fetchTestimonials = async () => {
      try {
        setLoading(true)
        
        const response = await import('../services/homepageService')
        const backendTestimonials = await response.getCachedHomepageTestimonials()
        
        if (backendTestimonials && backendTestimonials.length > 0) {
          setTestimonials(backendTestimonials)
        } else {
          setTestimonials(defaultTestimonials)
        }
      } catch (err) {
        console.error('Error fetching testimonials:', err)
        setTestimonials(defaultTestimonials)
      } finally {
        setLoading(false)
      }
    }

    fetchTestimonials()
  }, [language])

  useEffect(() => {
    let timeoutId;
    const scheduleNext = () => {
      timeoutId = setTimeout(() => {
        setCurrentTestimonial((prev) => (prev + 1) % testimonials.length);
        scheduleNext(); // Schedule the next transition
      }, 5000);
    };
    
    scheduleNext();
    
    return () => {
      if (timeoutId) clearTimeout(timeoutId);
    }
  }, [testimonials.length])

  return (
    <section className="testimonials-section-new">
      <div className="container">
        <div className="section-header-centered">
          <h2 className="section-title-modern">
            {language === 'en' ? 'Real Stories, Real Impact' : '‡¥Ø‡¥•‡¥æ‡µº‡¥§‡µç‡¥• ‡¥ï‡¥•‡¥ï‡µæ, ‡¥Ø‡¥•‡¥æ‡µº‡¥§‡µç‡¥• ‡¥∏‡µç‡¥µ‡¥æ‡¥ß‡µÄ‡¥®‡¥Ç'}
          </h2>
          <p className="section-subtitle-modern">
            {language === 'en' ? 'Hear from our community of lifesavers' : '‡¥ú‡µÄ‡¥µ‡µª ‡¥∞‡¥ï‡µç‡¥∑‡¥ï‡¥∞‡µÅ‡¥ü‡µÜ ‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ï‡¥Æ‡µç‡¥Æ‡µç‡¥Ø‡µÇ‡¥£‡¥ø‡¥±‡µç‡¥±‡¥ø‡¥Ø‡¥ø‡µΩ ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥ï‡µá‡µæ‡¥ï‡µç‡¥ï‡µÅ‡¥ï'}
          </p>
        </div>
        
        <div className="testimonial-modern-wrapper">
          {loading ? (
            <div className="testimonial-loading">Loading stories...</div>
          ) : (
            <>
              <div className="testimonial-modern-card">
                <div className="quote-mark">"</div>
                <div className="testimonial-content-modern">
                  <p className="testimonial-text-modern">{testimonials[currentTestimonial]?.quote}</p>
                  
                  <div className="testimonial-author-modern">
                    <div className="author-avatar">{testimonials[currentTestimonial]?.image}</div>
                    <div className="author-details-modern">
                      <h4 className="author-name-modern">{testimonials[currentTestimonial]?.author}</h4>
                      <p className="author-role-modern">{testimonials[currentTestimonial]?.role}</p>
                      <p className="author-location-modern">üìç {testimonials[currentTestimonial]?.location}</p>
                    </div>
                    <div className="author-badge-modern">
                      {testimonials[currentTestimonial]?.donations && (
                        <span className="badge-item">ü©∏ {testimonials[currentTestimonial]?.donations}</span>
                      )}
                      {testimonials[currentTestimonial]?.impact && (
                        <span className="badge-item">‚ú® {testimonials[currentTestimonial]?.impact}</span>
                      )}
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="testimonial-nav-modern">
                <button 
                  className="nav-btn-modern nav-btn--prev"
                  onClick={() => setCurrentTestimonial((prev) => (prev - 1 + testimonials.length) % testimonials.length)}
                  aria-label="Previous"
                >
                  ‚Üê
                </button>
                <div className="testimonial-indicators">
                  {testimonials.map((_, index) => (
                    <button
                      key={index}
                      className={`indicator ${index === currentTestimonial ? 'active' : ''}`}
                      onClick={() => setCurrentTestimonial(index)}
                      aria-label={`Story ${index + 1}`}
                    />
                  ))}
                </div>
                <button 
                  className="nav-btn-modern nav-btn--next"
                  onClick={() => setCurrentTestimonial((prev) => (prev + 1) % testimonials.length)}
                  aria-label="Next"
                >
                  ‚Üí
                </button>
              </div>
            </>
          )}
        </div>
      </div>
    </section>
  )
}

// Component for Emergency Preparedness - Simplified
function EmergencyPreparednessSection({ language }) {
  const preparednessItems = language === 'en' ? [
    {
      icon: 'üö®',
      title: '24/7 Support',
      description: 'Emergency helpline always available'
    },
    {
      icon: '‚ö°',
      title: 'Quick Response',
      description: 'Average response time under 2 hours'
    },
    {
      icon: 'üè•',
      title: '245+ Hospitals',
      description: 'Connected blood banks across Kerala'
    },
    {
      icon: 'üîê',
      title: 'Verified Network',
      description: 'All donors and hospitals are verified'
    }
  ] : [
    {
      icon: 'üö®',
      title: '24/7 ‡¥™‡¥ø‡¥®‡µç‡¥§‡µÅ‡¥£',
      description: '‡¥é‡¥Æ‡µº‡¥ú‡µª‡¥∏‡¥ø ‡¥π‡µÜ‡µΩ‡¥™‡µç‡¥™‡µç‡¥≤‡µà‡µª ‡¥é‡¥™‡µç‡¥™‡µã‡¥¥‡µÅ‡¥Ç ‡¥≤‡¥≠‡µç‡¥Ø‡¥Æ‡¥æ‡¥£‡µç'
    },
    {
      icon: '‚ö°',
      title: '‡¥¶‡µç‡¥∞‡µÅ‡¥§ ‡¥™‡µç‡¥∞‡¥§‡¥ø‡¥ï‡¥∞‡¥£‡¥Ç',
      description: '‡¥∂‡¥∞‡¥æ‡¥∂‡¥∞‡¥ø ‡¥™‡µç‡¥∞‡¥§‡¥ø‡¥ï‡¥∞‡¥£ ‡¥∏‡¥Æ‡¥Ø‡¥Ç 2 ‡¥Æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÇ‡¥±‡¥ø‡µΩ ‡¥§‡¥æ‡¥¥‡µÜ'
    },
    {
      icon: 'üè•',
      title: '245+ ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µæ',
      description: '‡¥ï‡µá‡¥∞‡¥≥‡¥§‡µç‡¥§‡¥ø‡¥≤‡µÅ‡¥ü‡¥®‡µÄ‡¥≥‡¥Ç ‡¥¨‡¥®‡µç‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ö‡µç‡¥ö ‡¥¨‡µç‡¥≤‡¥°‡µç ‡¥¨‡¥æ‡¥ô‡µç‡¥ï‡µÅ‡¥ï‡µæ'
    },
    {
      icon: 'üîê',
      title: '‡¥∏‡µç‡¥•‡¥ø‡¥∞‡µÄ‡¥ï‡¥∞‡¥ø‡¥ö‡µç‡¥ö ‡¥®‡µÜ‡¥±‡µç‡¥±‡µç‚Äå‡¥µ‡µº‡¥ï‡µç‡¥ï‡µç',
      description: '‡¥é‡¥≤‡µç‡¥≤‡¥æ ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡¥≥‡µÅ‡¥Ç ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø‡¥ï‡¥≥‡µÅ‡¥Ç ‡¥∏‡µç‡¥•‡¥ø‡¥∞‡µÄ‡¥ï‡¥∞‡¥ø‡¥ö‡µç‡¥ö‡¥µ‡¥Ø‡¥æ‡¥£‡µç'
    }
  ]

  return (
    <section className="emergency-preparedness-section-new">
      <div className="container">
        <div className="section-header-centered">
          <h2 className="section-title-modern">
            {language === 'en' ? 'Why Choose SmartBlood?' : '‡¥é‡¥®‡µç‡¥§‡µÅ‡¥ï‡µä‡¥£‡µç‡¥ü‡µç ‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥¨‡µç‡¥≤‡¥°‡µç?'}
          </h2>
          <p className="section-subtitle-modern">
            {language === 'en' 
              ? 'Fast, reliable, and always there when you need us'
              : '‡¥µ‡µá‡¥ó‡¥Æ‡µá‡¥±‡¥ø‡¥Ø‡¥§‡µÅ‡¥Ç ‡¥µ‡¥ø‡¥∂‡µç‡¥µ‡¥∏‡¥®‡µÄ‡¥Ø‡¥µ‡µÅ‡¥Ç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥Æ‡µÅ‡¥≥‡µç‡¥≥‡¥™‡µç‡¥™‡µã‡µæ ‡¥é‡¥™‡µç‡¥™‡µã‡¥¥‡µÅ‡¥Ç ‡¥â‡¥£‡µç‡¥ü‡µç'}
          </p>
        </div>
        
        <div className="preparedness-grid-modern">
          {preparednessItems.map((item, index) => (
            <div key={index} className="preparedness-card-modern">
              <div className="card-icon-modern">{item.icon}</div>
              <h3 className="card-title-modern">{item.title}</h3>
              <p className="card-description-modern">{item.description}</p>
            </div>
          ))}
        </div>
        
        <div className="emergency-cta-modern">
          <div className="cta-content-modern">
            <h3 className="cta-title">{language === 'en' ? 'Need Blood Urgently?' : '‡¥Ö‡¥ü‡¥ø‡¥Ø‡¥®‡µç‡¥§‡¥ø‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥∞‡¥ï‡µç‡¥§‡¥Ç ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥Æ‡µÅ‡¥£‡µç‡¥ü‡µã?'}</h3>
            <p className="cta-subtitle">{language === 'en' ? 'We\'re here 24/7 to help' : '‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥û‡¥ô‡µç‡¥ô‡µæ 24/7 ‡¥á‡¥µ‡¥ø‡¥ü‡µÜ‡¥Ø‡µÅ‡¥£‡µç‡¥ü‡µç'}</p>
            <div className="cta-buttons-modern">
              <Link to="/seeker/request" className="cta-btn cta-btn--primary">
                ü©∏ {language === 'en' ? 'Request Blood' : '‡¥∞‡¥ï‡µç‡¥§‡¥Ç ‡¥Ö‡¥≠‡µç‡¥Ø‡µº‡¥§‡µç‡¥•‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï'}
              </Link>
              <a href="tel:1800XXXBLOOD" className="cta-btn cta-btn--secondary">
                üìû {language === 'en' ? 'Call Hotline' : '‡¥π‡µã‡¥ü‡µç‡¥ü‡µç‚Äå‡¥≤‡µà‡µª ‡¥µ‡¥ø‡¥≥‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï'}
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

// Component for About Section
function AboutSection({ language }) {
  const [aboutStats, setAboutStats] = useState({
    livesSaved: 0,
    partnerHospitals: 0,
    support: '24/7'
  })
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  // Fetch about stats from backend
  useEffect(() => {
    const fetchAboutStats = async () => {
      try {
        setLoading(true)
        setError(null)
        
        const response = await import('../services/homepageService')
        const stats = await response.getCachedHomepageStats()
        
        if (stats) {
          setAboutStats({
            livesSaved: stats.lives_saved || 0,
            partnerHospitals: stats.active_hospitals || 0,
            support: '24/7'
          })
        }
      } catch (err) {
        console.error('Error fetching about stats:', err)
        setError(err.message)
        // Set to 0 instead of dummy values
        setAboutStats({
          livesSaved: 0,
          partnerHospitals: 0,
          support: '24/7'
        })
      } finally {
        setLoading(false)
      }
    }

    fetchAboutStats()
  }, [])

  return (
    <section id="about" className="about-section">
      <div className="container">
        <div className="about-content">
          <div className="about-text">
            <h2>{language === 'en' ? 'About SmartBlood' : '‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥¨‡µç‡¥≤‡¥°‡¥ø‡¥®‡µÜ ‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç'}</h2>
            <p>
              {language === 'en' 
                ? "SmartBlood is Kerala's premier blood donation platform, connecting donors, recipients, and hospitals in real-time. Our mission is to ensure no life is lost due to blood unavailability."
                : "‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç ‡¥¨‡µç‡¥≤‡¥°‡µç ‡¥ï‡µá‡¥∞‡¥≥‡¥§‡µç‡¥§‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥™‡µç‡¥∞‡¥Æ‡µÅ‡¥ñ ‡¥∞‡¥ï‡µç‡¥§‡¥¶‡¥æ‡¥® ‡¥™‡µç‡¥≤‡¥æ‡¥±‡µç‡¥±‡µç‡¥´‡µã‡¥Æ‡¥æ‡¥£‡µç, ‡¥¶‡¥æ‡¥®‡¥ø‡¥ï‡µæ, ‡¥∏‡µç‡¥µ‡µÄ‡¥ï‡µº‡¥§‡µç‡¥§‡¥æ‡¥ï‡µç‡¥ï‡µæ, ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µæ ‡¥é‡¥®‡µç‡¥®‡¥ø‡¥µ‡¥Ø‡µÜ ‡¥±‡¥ø‡¥Ø‡µΩ-‡¥ü‡µà‡¥Æ‡¥ø‡µΩ ‡¥¨‡¥®‡µç‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥∞‡¥ï‡µç‡¥§‡¥§‡µç‡¥§‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥Ö‡¥≠‡¥æ‡¥µ‡¥Ç ‡¥ï‡¥æ‡¥∞‡¥£‡¥Ç ‡¥í‡¥∞‡µÅ ‡¥ú‡µÄ‡¥µ‡¥ø‡¥§‡¥µ‡µÅ‡¥Ç ‡¥®‡¥∑‡µç‡¥ü‡¥™‡µç‡¥™‡µÜ‡¥ü‡¥æ‡¥§‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥≤‡¥ï‡µç‡¥∑‡µç‡¥Ø‡¥Ç."}
            </p>
            <Link to="/about" className="btn btn-outline">
              {language === 'en' ? 'Learn More' : '‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡µΩ ‡¥Ö‡¥±‡¥ø‡¥Ø‡µÅ‡¥ï'}
            </Link>
          </div>
          <div className="about-stats">
            <div className="about-stat">
              <div className="stat-number">
                {loading ? '...' : `${aboutStats.livesSaved.toLocaleString()}+`}
              </div>
              <div className="stat-label">{language === 'en' ? 'Lives Saved' : '‡¥ú‡µÄ‡¥µ‡¥ø‡¥§‡¥ô‡µç‡¥ô‡µæ ‡¥∞‡¥ï‡µç‡¥∑‡¥ø‡¥ö‡µç‡¥ö‡µÅ'}</div>
            </div>
            <div className="about-stat">
              <div className="stat-number">
                {loading ? '...' : `${aboutStats.partnerHospitals.toLocaleString()}+`}
              </div>
              <div className="stat-label">{language === 'en' ? 'Partner Hospitals' : '‡¥™‡¥ô‡µç‡¥ï‡¥æ‡¥≥‡¥ø ‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µæ'}</div>
            </div>
            <div className="about-stat">
              <div className="stat-number">{aboutStats.support}</div>
              <div className="stat-label">{language === 'en' ? 'Support' : '‡¥™‡¥ø‡¥®‡µç‡¥§‡µÅ‡¥£'}</div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

// Main Home Component
export default function Home() {
  const [language, setLanguage] = useState('en')

  // Get language from parent context or localStorage
  useEffect(() => {
    const savedLanguage = localStorage.getItem('language') || 'en'
    setLanguage(savedLanguage)
  }, [])

  // Listen for language changes from navbar
  useEffect(() => {
    const handleLanguageChange = () => {
      const savedLanguage = localStorage.getItem('language') || 'en'
      setLanguage(savedLanguage)
    }

    window.addEventListener('languageChanged', handleLanguageChange)
    return () => window.removeEventListener('languageChanged', handleLanguageChange)
  }, [])

  return (
    <>
      <Nav />
      <main className="home-page">
        <AlertsBar language={language} />
        <div className="full-bleed" style={{ marginTop: '132px' }}>
          <HeroBanner language={language} />
        </div>
      
      <SectionReveal>
        <StatsSection language={language} />
      </SectionReveal>
      
      <SectionReveal>
        <WhyDonateSection language={language} />
      </SectionReveal>
      
      <SectionReveal>
        <CompatibilityTool language={language} />
      </SectionReveal>
      
      <SectionReveal>
        <HowItWorksSection language={language} />
      </SectionReveal>
      
      <SectionReveal>
        <AlertsCampsSection language={language} />
      </SectionReveal>
      
      <SectionReveal>
        <TestimonialsSection language={language} />
      </SectionReveal>
      
      <SectionReveal>
        <EmergencyPreparednessSection language={language} />
      </SectionReveal>
      
      <SectionReveal>
        <AboutSection language={language} />
      </SectionReveal>
      
      {/* Footer */}
      <footer className="footer">
        <div className="container">
          <div className="footer-content">
            <div className="footer-section">
              <h3>{language === 'en' ? 'Find Blood' : '‡¥∞‡¥ï‡µç‡¥§‡¥Ç ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡µÅ‡¥ï'}</h3>
              <ul>
                <li><Link to="/seeker/request">{language === 'en' ? 'Blood Availability' : '‡¥∞‡¥ï‡µç‡¥§ ‡¥≤‡¥≠‡µç‡¥Ø‡¥§'}</Link></li>
                <li><Link to="/hospitals">{language === 'en' ? 'Blood Centers' : '‡¥∞‡¥ï‡µç‡¥§ ‡¥ï‡µá‡¥®‡µç‡¥¶‡µç‡¥∞‡¥ô‡µç‡¥ô‡µæ'}</Link></li>
                <li><Link to="/requests">{language === 'en' ? 'Requests' : '‡¥Ö‡¥≠‡µç‡¥Ø‡µº‡¥§‡µç‡¥•‡¥®‡¥ï‡µæ'}</Link></li>
              </ul>
            </div>
            <div className="footer-section">
              <h3>{language === 'en' ? 'Donate Blood' : '‡¥∞‡¥ï‡µç‡¥§‡¥Ç ‡¥¶‡¥æ‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï'}</h3>
              <ul>
                <li><Link to="/camps">{language === 'en' ? 'Camps' : '‡¥ï‡µç‡¥Ø‡¥æ‡¥Æ‡µç‡¥™‡µÅ‡¥ï‡µæ'}</Link></li>
                <li><Link to="/seeker/login">{language === 'en' ? 'Seeker Login' : '‡¥Ö‡¥®‡µç‡¥µ‡µá‡¥∑‡¥ï‡µª ‡¥≤‡µã‡¥ó‡¥ø‡µª'}</Link></li>
                <li><Link to="/how-to-donate">{language === 'en' ? 'How to Donate' : '‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥¶‡¥æ‡¥®‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥Ç'}</Link></li>
              </ul>
            </div>
            <div className="footer-section">
              <h3>{language === 'en' ? 'Hospital Login' : '‡¥Ü‡¥∂‡µÅ‡¥™‡¥§‡µç‡¥∞‡¥ø ‡¥≤‡µã‡¥ó‡¥ø‡µª'}</h3>
              <ul>
                <li><Link to="/hospital/register">{language === 'en' ? 'Center Registration' : '‡¥ï‡µá‡¥®‡µç‡¥¶‡µç‡¥∞ ‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥ü‡µç‡¥∞‡µá‡¥∑‡µª'}</Link></li>
                <li><Link to="/admin/login">{language === 'en' ? 'Login' : '‡¥≤‡µã‡¥ó‡¥ø‡µª'}</Link></li>
              </ul>
            </div>
            <div className="footer-section">
              <h3>{language === 'en' ? 'About Us' : '‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç'}</h3>
              <ul>
                <li><Link to="/faq">{language === 'en' ? 'FAQs' : '‡¥™‡¥§‡¥ø‡¥µ‡µç ‡¥ö‡µã‡¥¶‡µç‡¥Ø‡¥ô‡µç‡¥ô‡µæ'}</Link></li>
                <li><Link to="/policies">{language === 'en' ? 'Policies' : '‡¥®‡¥Ø‡¥ô‡µç‡¥ô‡µæ'}</Link></li>
                <li><Link to="/contact">{language === 'en' ? 'Contact' : '‡¥¨‡¥®‡µç‡¥ß‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥ï'}</Link></li>
              </ul>
            </div>
          </div>
          <div className="footer-bottom">
            <div className="social-links">
              <a href="#" aria-label="Facebook" className="social-link facebook">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                </svg>
              </a>
              <a href="#" aria-label="Twitter" className="social-link twitter">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </a>
              <a href="#" aria-label="Instagram" className="social-link instagram">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                </svg>
              </a>
              <a href="#" aria-label="YouTube" className="social-link youtube">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
                </svg>
              </a>
            </div>
            <p>&copy; {new Date().getFullYear()} SmartBlood Connect. {language === 'en' ? 'All rights reserved.' : '‡¥é‡¥≤‡µç‡¥≤‡¥æ ‡¥Ö‡¥µ‡¥ï‡¥æ‡¥∂‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥Ç ‡¥®‡¥ø‡¥ï‡µç‡¥∑‡¥ø‡¥™‡µç‡¥§‡¥Ç.'}</p>
          </div>
        </div>
      </footer>
      </main>
    </>
  )
}