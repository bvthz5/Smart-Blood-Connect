version: '3.8'

services:
  # PostgreSQL Database (Development)
  postgres:
    image: postgres:15-alpine
    container_name: smartblood-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: smartblood
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - smartblood-dev-network

  # Backend Flask API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smartblood-backend-dev
    restart: unless-stopped
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql+psycopg2://postgres:123@postgres:5432/smartblood
      - JWT_SECRET_KEY=dev-jwt-secret-key
      - OTP_SECRET=dev-otp-secret
      - ADMIN_EMAIL=smartblooda@gmail.com
      - ADMIN_PASSWORD=Admin@123
      - ACCESS_EXPIRES_MINUTES=15
      - REFRESH_EXPIRES_DAYS=7
      - SECRET_KEY=dev-flask-secret-key
      - HOST=0.0.0.0
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - smartblood-dev-network
    volumes:
      - ./backend:/app
      - /app/__pycache__
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        python -c 'from app import create_app; create_app()' &&
        echo 'Starting Flask development server...' &&
        python run.py
      "

  # Frontend React App (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: smartblood-frontend-dev
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - smartblood-dev-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_dev_data:
    driver: local

networks:
  smartblood-dev-network:
    driver: bridge
