version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smartblood-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: smartblood
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - smartblood-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d smartblood"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Flask API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smartblood-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env.production
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - smartblood-network
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        python -c 'from app import create_app; create_app()' &&
        echo 'Starting Flask server...' &&
        python run.py
      "

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smartblood-frontend
    restart: unless-stopped
    env_file:
      - ./backend/.env.production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - smartblood-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: smartblood-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartblood-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  smartblood-network:
    driver: bridge
